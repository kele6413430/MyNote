1.创建一个类,实现HandlerInterceptor接口,
  public class FirstInterceptor implements HandlerInterceptor
2.在mvc配置文件中,配置拦截器链
  <mvc:interceptors>
	<bean class="com.test.springmvc.interceptor.FirstInterceptor"/>
  </mvc:interceptors>
3.各个方法的调用顺序
  (1)preHandle方法
  该方法在目标方法之前被调用
  若返回true,则继续调用后续的拦截器和目标方法
  若返回false,则不会再调用后续的拦截器和目标方法
  用处:可以考虑做权限,日志,事务等
  (2)postHandle方法
  当preHandle方法返回true的情况下,才会执行postHandle方法
  调用目标方法之后,但在渲染方法之前被调用
  用处:可以对请求域中的属性或视图做出修改
  (3)afterCompletion方法
  渲染视图之后被调用
  用处,释放资源
4.多个拦截器之间的调用顺序
  preHandle方法按顺序执行,
  postHandle方法按倒序执行,
  afterCompletion按倒序执行
  从源码的角度看,在执行preHandle方法时,for循环是从-1到最后执行的,
  在执行postHandle方法时,是从当前拦截器序号到0执行,
  在执行afterCompletion方法时,是从当前拦截器序号到0执行,
  所以才有这样的拦截器顺序